{
	"id": "5d7d1e9c-4ef5-4b2a-87e9-536270f3e8fc",
	"name": "REST Planning and Implementation",
	"allTests": [],
	"timestamp": "2018-07-15T01:40:11.545Z",
	"collection_id": "757a32e9-4cde-4556-86ff-292663cdd798",
	"folder_id": 0,
	"target_type": "collection",
	"environment_id": "9163a0e7-c4b2-45e6-8e04-8572be9200d9",
	"data": [],
	"delay": 0,
	"count": 1,
	"collection": {
		"id": "757a32e9-4cde-4556-86ff-292663cdd798",
		"name": "REST Planning and Implementation",
		"description": null,
		"auth": null,
		"events": null,
		"variables": null,
		"order": [
			"9b52f34d-8c27-42e0-b02a-0455e0cf5457",
			"2b780fac-2766-4ddb-816c-f93b98e1edb8",
			"5e0405b5-8760-4589-9478-ee7c8407f9c8",
			"7817e23e-d04c-425f-abce-24d19c67ef4a",
			"297c3a6f-faac-4bd0-af0b-0c9c15cf90bc",
			"22850b3c-6a02-4942-98d0-36cd389573a8",
			"5797f802-7dd4-421a-8e92-7d2077bd61a1",
			"1b3e8e0b-0981-4dc5-9928-d89e8d002744",
			"5307ff4f-dcde-492a-ab54-c29a79d409b1",
			"bd166302-c610-463a-8ab5-c8a6e9927bda",
			"e9e162f6-0da5-4141-bd1c-dd8f03c63b70",
			"fc50dbdd-f06d-4066-b279-66849bad0b82",
			"1c46673e-6d62-4d44-b6d5-6546362e5acf",
			"69bea264-48cc-4152-968d-624a03da4a07",
			"0e0ee55a-8815-4520-902e-97067a299f84",
			"9494573e-6760-40e8-9a0f-8266ebb69656",
			"3dd2658b-891e-4846-9417-f3ebd85d504f",
			"188f74c3-792f-44bb-b519-c95b8754c073",
			"def760f9-7862-4dd5-8295-c0df37e68fb0",
			"fa61c1bf-de68-4efe-84a3-b0f897fd3ed7",
			"ebc80180-9528-465e-b1f9-6e35eaf61b82",
			"6a3a1c5d-a547-483e-ad90-ad5ad46b3b77",
			"4c59e2c6-89ae-462d-8fef-62ef656b5e39"
		],
		"folders_order": [],
		"owner": "3397961",
		"permissions": {},
		"favorite": false,
		"shared": false,
		"type": "collection",
		"depth": 0
	},
	"folder": null,
	"environment": null,
	"globals": [],
	"results": [
		{
			"name": "1.1.1 Create boat VALID",
			"id": "9b52f34d-8c27-42e0-b02a-0455e0cf5457",
			"url": "https://rest-assignment.appspot.com/boats",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "boat id created is:ahFzfnJlc3QtYXNzaWdubWVudHIRCxIEQm9hdBiAgIDA9omYCgw",
				"status": "pass"
			},
			"testPassFailCounts": {
				"boat id created is:ahFzfnJlc3QtYXNzaWdubWVudHIRCxIEQm9hdBiAgIDA9omYCgw": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"809"
			],
			"allTests": [
				{
					"boat id created is:ahFzfnJlc3QtYXNzaWdubWVudHIRCxIEQm9hdBiAgIDA9omYCgw": true
				}
			],
			"time": "809",
			"totalRequestTime": "809",
			"iterationResults": {}
		},
		{
			"name": "1.1.1 Create boat INVALID",
			"id": "2b780fac-2766-4ddb-816c-f93b98e1edb8",
			"url": "https://rest-assignment.appspot.com/boats",
			"totalTime": 0,
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": {
					"name": "Bad Request",
					"detail": "The request cannot be fulfilled due to bad syntax."
				}
			},
			"tests": {
				"name": "Error: Invalid Boat Type Input Given!",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Error: Invalid Boat Type Input Given!": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"95"
			],
			"allTests": [
				{
					"Error: Invalid Boat Type Input Given!": true
				}
			],
			"time": "95",
			"totalRequestTime": "95",
			"iterationResults": {}
		},
		{
			"name": "1.1.2 Create slip VALID",
			"id": "5e0405b5-8760-4589-9478-ee7c8407f9c8",
			"url": "https://rest-assignment.appspot.com/slips",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "slip id is:ahFzfnJlc3QtYXNzaWdubWVudHIRCxIEU2xpcBiAgICAr_WECgw",
				"status": "pass"
			},
			"testPassFailCounts": {
				"slip id is:ahFzfnJlc3QtYXNzaWdubWVudHIRCxIEU2xpcBiAgICAr_WECgw": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"271"
			],
			"allTests": [
				{
					"slip id is:ahFzfnJlc3QtYXNzaWdubWVudHIRCxIEU2xpcBiAgICAr_WECgw": true
				}
			],
			"time": "271",
			"totalRequestTime": "271",
			"iterationResults": {}
		},
		{
			"name": "1.1.2 Create slip INVALID",
			"id": "7817e23e-d04c-425f-abce-24d19c67ef4a",
			"url": "https://rest-assignment.appspot.com/slips",
			"totalTime": 0,
			"responseCode": {
				"code": 403,
				"name": "Forbidden",
				"detail": {
					"name": "Forbidden",
					"detail": "The request was a legal request, but the server is refusing to respond to it. Unlike a 401 Unauthorized response, authenticating will make no difference."
				}
			},
			"tests": {
				"name": "Error: That slip number is already in use!",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Error: That slip number is already in use!": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"132"
			],
			"allTests": [
				{
					"Error: That slip number is already in use!": true
				}
			],
			"time": "132",
			"totalRequestTime": "132",
			"iterationResults": {}
		},
		{
			"name": "3. Managing a boat arrival VALID",
			"id": "297c3a6f-faac-4bd0-af0b-0c9c15cf90bc",
			"url": "https://rest-assignment.appspot.com/slips/ahFzfnJlc3QtYXNzaWdubWVudHIRCxIEU2xpcBiAgICAr_WECgw/boat",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "Success: Boat was added to the slip and is no longer in the sea",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Success: Boat was added to the slip and is no longer in the sea": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"275"
			],
			"allTests": [
				{
					"Success: Boat was added to the slip and is no longer in the sea": true
				}
			],
			"time": "275",
			"totalRequestTime": "275",
			"iterationResults": {}
		},
		{
			"name": "3. Managing a boat arrival INVALID",
			"id": "22850b3c-6a02-4942-98d0-36cd389573a8",
			"url": "https://rest-assignment.appspot.com/slips/ahFzfnJlc3QtYXNzaWdubWVudHIRCxIEU2xpcBiAgICAr_WECgw/boat",
			"totalTime": 0,
			"responseCode": {
				"code": 403,
				"name": "Forbidden",
				"detail": {
					"name": "Forbidden",
					"detail": "The request was a legal request, but the server is refusing to respond to it. Unlike a 401 Unauthorized response, authenticating will make no difference."
				}
			},
			"tests": {
				"name": "Error: That slip is already occupied!",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Error: That slip is already occupied!": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"196"
			],
			"allTests": [
				{
					"Error: That slip is already occupied!": true
				}
			],
			"time": "196",
			"totalRequestTime": "196",
			"iterationResults": {}
		},
		{
			"name": "1.4 View Individual Boat VALID",
			"id": "5797f802-7dd4-421a-8e92-7d2077bd61a1",
			"url": "https://rest-assignment.appspot.com/boats/ahFzfnJlc3QtYXNzaWdubWVudHIRCxIEQm9hdBiAgIDA9omYCgw",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "1 Boat Returned ",
				"status": "pass"
			},
			"testPassFailCounts": {
				"1 Boat Returned ": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"116"
			],
			"allTests": [
				{
					"1 Boat Returned ": true
				}
			],
			"time": "116",
			"totalRequestTime": "116",
			"iterationResults": {}
		},
		{
			"name": "1.4 View Individual Boats INVALID",
			"id": "1b3e8e0b-0981-4dc5-9928-d89e8d002744",
			"url": "https://rest-assignment.appspot.com/boats/DSFDSFS",
			"totalTime": 0,
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": {
					"name": "Bad Request",
					"detail": "The request cannot be fulfilled due to bad syntax."
				}
			},
			"tests": {
				"name": "Error: Boat ID not found!",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Error: Boat ID not found!": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"113"
			],
			"allTests": [
				{
					"Error: Boat ID not found!": true
				}
			],
			"time": "113",
			"totalRequestTime": "113",
			"iterationResults": {}
		},
		{
			"name": "1.4 View Individual Slip VALID",
			"id": "5307ff4f-dcde-492a-ab54-c29a79d409b1",
			"url": "https://rest-assignment.appspot.com/slips/ahFzfnJlc3QtYXNzaWdubWVudHIRCxIEU2xpcBiAgICAr_WECgw",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "1 Slip Returned ",
				"status": "pass"
			},
			"testPassFailCounts": {
				"1 Slip Returned ": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"179"
			],
			"allTests": [
				{
					"1 Slip Returned ": true
				}
			],
			"time": "179",
			"totalRequestTime": "179",
			"iterationResults": {}
		},
		{
			"name": "1.4 View Individual Slip INVALID",
			"id": "bd166302-c610-463a-8ab5-c8a6e9927bda",
			"url": "https://rest-assignment.appspot.com/slips/sdfsd",
			"totalTime": 0,
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": {
					"name": "Bad Request",
					"detail": "The request cannot be fulfilled due to bad syntax."
				}
			},
			"tests": {
				"name": "Error: Slip ID not found!",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Error: Slip ID not found!": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"112"
			],
			"allTests": [
				{
					"Error: Slip ID not found!": true
				}
			],
			"time": "112",
			"totalRequestTime": "112",
			"iterationResults": {}
		},
		{
			"name": "1.4 View All Boats VALID",
			"id": "e9e162f6-0da5-4141-bd1c-dd8f03c63b70",
			"url": "https://rest-assignment.appspot.com/boats",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {},
			"times": [
				"114"
			],
			"allTests": [
				{}
			],
			"time": "114",
			"totalRequestTime": "114",
			"iterationResults": {}
		},
		{
			"name": "1.4 View All Slips VALID",
			"id": "fc50dbdd-f06d-4066-b279-66849bad0b82",
			"url": "https://rest-assignment.appspot.com/slips",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "1 slips returned",
				"status": "pass"
			},
			"testPassFailCounts": {
				"1 slips returned": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"115"
			],
			"allTests": [
				{
					"1 slips returned": true
				}
			],
			"time": "115",
			"totalRequestTime": "115",
			"iterationResults": {}
		},
		{
			"name": "1.3 Modify a Boat VALID",
			"id": "1c46673e-6d62-4d44-b6d5-6546362e5acf",
			"url": "https://rest-assignment.appspot.com/boats/ahFzfnJlc3QtYXNzaWdubWVudHIRCxIEQm9hdBiAgIDA9omYCgw",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "Success: Boat has been edited",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Success: Boat has been edited": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"184"
			],
			"allTests": [
				{
					"Success: Boat has been edited": true
				}
			],
			"time": "184",
			"totalRequestTime": "184",
			"iterationResults": {}
		},
		{
			"name": "1.3 Modify a Boat INVALID TYPE",
			"id": "69bea264-48cc-4152-968d-624a03da4a07",
			"url": "https://rest-assignment.appspot.com/boats/ahFzfnJlc3QtYXNzaWdubWVudHIRCxIEQm9hdBiAgIDA9omYCgw",
			"totalTime": 0,
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": {
					"name": "Bad Request",
					"detail": "The request cannot be fulfilled due to bad syntax."
				}
			},
			"tests": {
				"name": "Error: Invalid Boat Type Input Given!",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Error: Invalid Boat Type Input Given!": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"112"
			],
			"allTests": [
				{
					"Error: Invalid Boat Type Input Given!": true
				}
			],
			"time": "112",
			"totalRequestTime": "112",
			"iterationResults": {}
		},
		{
			"name": "1.3 Modify a Boat INVALID ARGUMENTS",
			"id": "0e0ee55a-8815-4520-902e-97067a299f84",
			"url": "https://rest-assignment.appspot.com/boats/ahFzfnJlc3QtYXNzaWdubWVudHIRCxIEQm9hdBiAgIDA9omYCgw",
			"totalTime": 0,
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": {
					"name": "Bad Request",
					"detail": "The request cannot be fulfilled due to bad syntax."
				}
			},
			"tests": {
				"name": "Error: 3 arguments needed to modify a boat",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Error: 3 arguments needed to modify a boat": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"97"
			],
			"allTests": [
				{
					"Error: 3 arguments needed to modify a boat": true
				}
			],
			"time": "97",
			"totalRequestTime": "97",
			"iterationResults": {}
		},
		{
			"name": "1.3 Modifiy a Slip VALID",
			"id": "9494573e-6760-40e8-9a0f-8266ebb69656",
			"url": "https://rest-assignment.appspot.com/slips/ahFzfnJlc3QtYXNzaWdubWVudHIRCxIEU2xpcBiAgICAr_WECgw",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "Success: Slip has been updated",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Success: Slip has been updated": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"198"
			],
			"allTests": [
				{
					"Success: Slip has been updated": true
				}
			],
			"time": "198",
			"totalRequestTime": "198",
			"iterationResults": {}
		},
		{
			"name": "1.3 Modify a Slip INVALID",
			"id": "3dd2658b-891e-4846-9417-f3ebd85d504f",
			"url": "https://rest-assignment.appspot.com/slips/ahFzfnJlc3QtYXNzaWdubWVudHIRCxIEU2xpcBiAgICAr_WECgw",
			"totalTime": 0,
			"responseCode": {
				"code": 403,
				"name": "Forbidden",
				"detail": {
					"name": "Forbidden",
					"detail": "The request was a legal request, but the server is refusing to respond to it. Unlike a 401 Unauthorized response, authenticating will make no difference."
				}
			},
			"tests": {
				"name": "Error: That slip number is already in use!",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Error: That slip number is already in use!": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"179"
			],
			"allTests": [
				{
					"Error: That slip number is already in use!": true
				}
			],
			"time": "179",
			"totalRequestTime": "179",
			"iterationResults": {}
		},
		{
			"name": "2. Setting a boat to be \"At sea\" VALID",
			"id": "188f74c3-792f-44bb-b519-c95b8754c073",
			"url": "https://rest-assignment.appspot.com/boats/ahFzfnJlc3QtYXNzaWdubWVudHIRCxIEQm9hdBiAgIDA9omYCgw",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "Success: Boat is at sea and the previously occupied slip is now empty",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Success: Boat is at sea and the previously occupied slip is now empty": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"274"
			],
			"allTests": [
				{
					"Success: Boat is at sea and the previously occupied slip is now empty": true
				}
			],
			"time": "274",
			"totalRequestTime": "274",
			"iterationResults": {}
		},
		{
			"name": "2. Setting a boat to be \"At sea\" INVALID",
			"id": "def760f9-7862-4dd5-8295-c0df37e68fb0",
			"url": "https://rest-assignment.appspot.com/boats/ahFzfnJlc3QtYXNzaWdubWVudHIRCxIEQm9hdBiAgIDA9omYCgw",
			"totalTime": 0,
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": {
					"name": "Bad Request",
					"detail": "The request cannot be fulfilled due to bad syntax."
				}
			},
			"tests": {
				"name": "Error: Boat is already at sea!",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Error: Boat is already at sea!": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"120"
			],
			"allTests": [
				{
					"Error: Boat is already at sea!": true
				}
			],
			"time": "120",
			"totalRequestTime": "120",
			"iterationResults": {}
		},
		{
			"name": "1.2 Delete Slip VALID",
			"id": "fa61c1bf-de68-4efe-84a3-b0f897fd3ed7",
			"url": "https://rest-assignment.appspot.com/slips/ahFzfnJlc3QtYXNzaWdubWVudHIRCxIEU2xpcBiAgICAr_WECgw",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "Success: Slip has been deleted",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Success: Slip has been deleted": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"215"
			],
			"allTests": [
				{
					"Success: Slip has been deleted": true
				}
			],
			"time": "215",
			"totalRequestTime": "215",
			"iterationResults": {}
		},
		{
			"name": "1.2 Delete Slip INVALID",
			"id": "ebc80180-9528-465e-b1f9-6e35eaf61b82",
			"url": "https://rest-assignment.appspot.com/slips/sdfds",
			"totalTime": 0,
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": {
					"name": "Bad Request",
					"detail": "The request cannot be fulfilled due to bad syntax."
				}
			},
			"tests": {
				"name": "Error: Slip ID not found!",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Error: Slip ID not found!": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"109"
			],
			"allTests": [
				{
					"Error: Slip ID not found!": true
				}
			],
			"time": "109",
			"totalRequestTime": "109",
			"iterationResults": {}
		},
		{
			"name": "1.2 Delete Boat VALID",
			"id": "6a3a1c5d-a547-483e-ad90-ad5ad46b3b77",
			"url": "https://rest-assignment.appspot.com/boats/ahFzfnJlc3QtYXNzaWdubWVudHIRCxIEQm9hdBiAgIDA9omYCgw",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "Success: Boat has been deleted",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Success: Boat has been deleted": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"167"
			],
			"allTests": [
				{
					"Success: Boat has been deleted": true
				}
			],
			"time": "167",
			"totalRequestTime": "167",
			"iterationResults": {}
		},
		{
			"name": "1.2 Delete Boat INVALID",
			"id": "4c59e2c6-89ae-462d-8fef-62ef656b5e39",
			"url": "https://rest-assignment.appspot.com/boats/sdfsdf",
			"totalTime": 0,
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": {
					"name": "Bad Request",
					"detail": "The request cannot be fulfilled due to bad syntax."
				}
			},
			"tests": {
				"name": "Error: Boat ID not found!",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Error: Boat ID not found!": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"110"
			],
			"allTests": [
				{
					"Error: Boat ID not found!": true
				}
			],
			"time": "110",
			"totalRequestTime": "110",
			"iterationResults": {}
		}
	],
	"totalPass": 22,
	"totalFail": 0,
	"totalTime": 4292,
	"lifecycle": "done",
	"requests": [
		{
			"name": "1.1.1 Create boat VALID",
			"id": "9b52f34d-8c27-42e0-b02a-0455e0cf5457",
			"url": "https://rest-assignment.appspot.com/boats",
			"time": "2018-07-15T01:40:11.545Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"boat id created is:ahFzfnJlc3QtYXNzaWdubWVudHIRCxIEQm9hdBiAgIDA9omYCgw": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "1.1.1 Create boat INVALID",
			"id": "2b780fac-2766-4ddb-816c-f93b98e1edb8",
			"url": "https://rest-assignment.appspot.com/boats",
			"time": "2018-07-15T01:40:11.545Z",
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": {
					"name": "Bad Request",
					"detail": "The request cannot be fulfilled due to bad syntax."
				}
			},
			"testPassFailCounts": {
				"Error: Invalid Boat Type Input Given!": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "1.1.2 Create slip VALID",
			"id": "5e0405b5-8760-4589-9478-ee7c8407f9c8",
			"url": "https://rest-assignment.appspot.com/slips",
			"time": "2018-07-15T01:40:11.545Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"slip id is:ahFzfnJlc3QtYXNzaWdubWVudHIRCxIEU2xpcBiAgICAr_WECgw": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "1.1.2 Create slip INVALID",
			"id": "7817e23e-d04c-425f-abce-24d19c67ef4a",
			"url": "https://rest-assignment.appspot.com/slips",
			"time": "2018-07-15T01:40:11.545Z",
			"responseCode": {
				"code": 403,
				"name": "Forbidden",
				"detail": {
					"name": "Forbidden",
					"detail": "The request was a legal request, but the server is refusing to respond to it. Unlike a 401 Unauthorized response, authenticating will make no difference."
				}
			},
			"testPassFailCounts": {
				"Error: That slip number is already in use!": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "3. Managing a boat arrival VALID",
			"id": "297c3a6f-faac-4bd0-af0b-0c9c15cf90bc",
			"url": "https://rest-assignment.appspot.com/slips/ahFzfnJlc3QtYXNzaWdubWVudHIRCxIEU2xpcBiAgICAr_WECgw/boat",
			"time": "2018-07-15T01:40:11.545Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Success: Boat was added to the slip and is no longer in the sea": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "3. Managing a boat arrival INVALID",
			"id": "22850b3c-6a02-4942-98d0-36cd389573a8",
			"url": "https://rest-assignment.appspot.com/slips/ahFzfnJlc3QtYXNzaWdubWVudHIRCxIEU2xpcBiAgICAr_WECgw/boat",
			"time": "2018-07-15T01:40:11.545Z",
			"responseCode": {
				"code": 403,
				"name": "Forbidden",
				"detail": {
					"name": "Forbidden",
					"detail": "The request was a legal request, but the server is refusing to respond to it. Unlike a 401 Unauthorized response, authenticating will make no difference."
				}
			},
			"testPassFailCounts": {
				"Error: That slip is already occupied!": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "1.4 View Individual Boat VALID",
			"id": "5797f802-7dd4-421a-8e92-7d2077bd61a1",
			"url": "https://rest-assignment.appspot.com/boats/ahFzfnJlc3QtYXNzaWdubWVudHIRCxIEQm9hdBiAgIDA9omYCgw",
			"time": "2018-07-15T01:40:11.545Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"1 Boat Returned ": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "1.4 View Individual Boats INVALID",
			"id": "1b3e8e0b-0981-4dc5-9928-d89e8d002744",
			"url": "https://rest-assignment.appspot.com/boats/DSFDSFS",
			"time": "2018-07-15T01:40:11.545Z",
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": {
					"name": "Bad Request",
					"detail": "The request cannot be fulfilled due to bad syntax."
				}
			},
			"testPassFailCounts": {
				"Error: Boat ID not found!": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "1.4 View Individual Slip VALID",
			"id": "5307ff4f-dcde-492a-ab54-c29a79d409b1",
			"url": "https://rest-assignment.appspot.com/slips/ahFzfnJlc3QtYXNzaWdubWVudHIRCxIEU2xpcBiAgICAr_WECgw",
			"time": "2018-07-15T01:40:11.545Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"1 Slip Returned ": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "1.4 View Individual Slip INVALID",
			"id": "bd166302-c610-463a-8ab5-c8a6e9927bda",
			"url": "https://rest-assignment.appspot.com/slips/sdfsd",
			"time": "2018-07-15T01:40:11.545Z",
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": {
					"name": "Bad Request",
					"detail": "The request cannot be fulfilled due to bad syntax."
				}
			},
			"testPassFailCounts": {
				"Error: Slip ID not found!": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "1.4 View All Boats VALID",
			"id": "e9e162f6-0da5-4141-bd1c-dd8f03c63b70",
			"url": "https://rest-assignment.appspot.com/boats",
			"time": "2018-07-15T01:40:11.545Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {}
		},
		{
			"name": "1.4 View All Slips VALID",
			"id": "fc50dbdd-f06d-4066-b279-66849bad0b82",
			"url": "https://rest-assignment.appspot.com/slips",
			"time": "2018-07-15T01:40:11.545Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"1 slips returned": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "1.3 Modify a Boat VALID",
			"id": "1c46673e-6d62-4d44-b6d5-6546362e5acf",
			"url": "https://rest-assignment.appspot.com/boats/ahFzfnJlc3QtYXNzaWdubWVudHIRCxIEQm9hdBiAgIDA9omYCgw",
			"time": "2018-07-15T01:40:11.545Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Success: Boat has been edited": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "1.3 Modify a Boat INVALID TYPE",
			"id": "69bea264-48cc-4152-968d-624a03da4a07",
			"url": "https://rest-assignment.appspot.com/boats/ahFzfnJlc3QtYXNzaWdubWVudHIRCxIEQm9hdBiAgIDA9omYCgw",
			"time": "2018-07-15T01:40:11.545Z",
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": {
					"name": "Bad Request",
					"detail": "The request cannot be fulfilled due to bad syntax."
				}
			},
			"testPassFailCounts": {
				"Error: Invalid Boat Type Input Given!": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "1.3 Modify a Boat INVALID ARGUMENTS",
			"id": "0e0ee55a-8815-4520-902e-97067a299f84",
			"url": "https://rest-assignment.appspot.com/boats/ahFzfnJlc3QtYXNzaWdubWVudHIRCxIEQm9hdBiAgIDA9omYCgw",
			"time": "2018-07-15T01:40:11.545Z",
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": {
					"name": "Bad Request",
					"detail": "The request cannot be fulfilled due to bad syntax."
				}
			},
			"testPassFailCounts": {
				"Error: 3 arguments needed to modify a boat": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "1.3 Modifiy a Slip VALID",
			"id": "9494573e-6760-40e8-9a0f-8266ebb69656",
			"url": "https://rest-assignment.appspot.com/slips/ahFzfnJlc3QtYXNzaWdubWVudHIRCxIEU2xpcBiAgICAr_WECgw",
			"time": "2018-07-15T01:40:11.545Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Success: Slip has been updated": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "1.3 Modify a Slip INVALID",
			"id": "3dd2658b-891e-4846-9417-f3ebd85d504f",
			"url": "https://rest-assignment.appspot.com/slips/ahFzfnJlc3QtYXNzaWdubWVudHIRCxIEU2xpcBiAgICAr_WECgw",
			"time": "2018-07-15T01:40:11.545Z",
			"responseCode": {
				"code": 403,
				"name": "Forbidden",
				"detail": {
					"name": "Forbidden",
					"detail": "The request was a legal request, but the server is refusing to respond to it. Unlike a 401 Unauthorized response, authenticating will make no difference."
				}
			},
			"testPassFailCounts": {
				"Error: That slip number is already in use!": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "2. Setting a boat to be \"At sea\" VALID",
			"id": "188f74c3-792f-44bb-b519-c95b8754c073",
			"url": "https://rest-assignment.appspot.com/boats/ahFzfnJlc3QtYXNzaWdubWVudHIRCxIEQm9hdBiAgIDA9omYCgw",
			"time": "2018-07-15T01:40:11.545Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Success: Boat is at sea and the previously occupied slip is now empty": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "2. Setting a boat to be \"At sea\" INVALID",
			"id": "def760f9-7862-4dd5-8295-c0df37e68fb0",
			"url": "https://rest-assignment.appspot.com/boats/ahFzfnJlc3QtYXNzaWdubWVudHIRCxIEQm9hdBiAgIDA9omYCgw",
			"time": "2018-07-15T01:40:11.545Z",
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": {
					"name": "Bad Request",
					"detail": "The request cannot be fulfilled due to bad syntax."
				}
			},
			"testPassFailCounts": {
				"Error: Boat is already at sea!": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "1.2 Delete Slip VALID",
			"id": "fa61c1bf-de68-4efe-84a3-b0f897fd3ed7",
			"url": "https://rest-assignment.appspot.com/slips/ahFzfnJlc3QtYXNzaWdubWVudHIRCxIEU2xpcBiAgICAr_WECgw",
			"time": "2018-07-15T01:40:11.545Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Success: Slip has been deleted": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "1.2 Delete Slip INVALID",
			"id": "ebc80180-9528-465e-b1f9-6e35eaf61b82",
			"url": "https://rest-assignment.appspot.com/slips/sdfds",
			"time": "2018-07-15T01:40:11.545Z",
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": {
					"name": "Bad Request",
					"detail": "The request cannot be fulfilled due to bad syntax."
				}
			},
			"testPassFailCounts": {
				"Error: Slip ID not found!": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "1.2 Delete Boat VALID",
			"id": "6a3a1c5d-a547-483e-ad90-ad5ad46b3b77",
			"url": "https://rest-assignment.appspot.com/boats/ahFzfnJlc3QtYXNzaWdubWVudHIRCxIEQm9hdBiAgIDA9omYCgw",
			"time": "2018-07-15T01:40:11.545Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Success: Boat has been deleted": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "1.2 Delete Boat INVALID",
			"id": "4c59e2c6-89ae-462d-8fef-62ef656b5e39",
			"url": "https://rest-assignment.appspot.com/boats/sdfsdf",
			"time": "2018-07-15T01:40:11.545Z",
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": {
					"name": "Bad Request",
					"detail": "The request cannot be fulfilled due to bad syntax."
				}
			},
			"testPassFailCounts": {
				"Error: Boat ID not found!": {
					"pass": 1,
					"fail": 0
				}
			}
		}
	],
	"synced": false
}